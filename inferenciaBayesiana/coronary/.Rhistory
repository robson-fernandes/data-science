lnWeight = c(4.87, 3.93, 6.46, 3.33, 4.38, 4.70, 3.50, 4.50,
3.58, 3.64, 5.90, 4.43, 4.38, 4.42, 4.25)
)
p <- plot_ly(data = alligator, x = ~lnWeight, y = ~lnLength)
chart_link = plotly_POST(p, filename="scatter/basic")
chart_link
library(plotly)
alligator = data.frame(
lnLength = c(3.87, 3.61, 4.33, 3.43, 3.81, 3.83, 3.46, 3.76,
3.50, 3.58, 4.19, 3.78, 3.71, 3.73, 3.78),
lnWeight = c(4.87, 3.93, 6.46, 3.33, 4.38, 4.70, 3.50, 4.50,
3.58, 3.64, 5.90, 4.43, 4.38, 4.42, 4.25)
)
p <- plot_ly(data = alligator, x = ~lnWeight, y = ~lnLength)
chart_link = plotly_POST(p, filename="scatter/basic")
library(plotly)
alligator = data.frame(
lnLength = c(3.87, 3.61, 4.33, 3.43, 3.81, 3.83, 3.46, 3.76,
3.50, 3.58, 4.19, 3.78, 3.71, 3.73, 3.78),
lnWeight = c(4.87, 3.93, 6.46, 3.33, 4.38, 4.70, 3.50, 4.50,
3.58, 3.64, 5.90, 4.43, 4.38, 4.42, 4.25)
)
p <- plot_ly(data = alligator, x = ~lnWeight, y = ~lnLength)
chart_link = plotly_POST(p)
chart_link
library(plotly)
p <- plot_ly(data = iris, x = ~Sepal.Length, y = ~Petal.Length, color = ~Species)
# Create a shareable link to your chart
# Set up API credentials: https://plot.ly/r/getting-started
chart_link = plotly_POST(p, filename="scatter/color")
chart_link
Y1<-plnorm(tempo, meanlog = betas%*%covariaveis, sdlog = 1.24, log = FALSE)
##Tempo de interesse
tempo<-seq(0,200,1)
covariaveis1<-c(1,0,0,0,1,0,1,0)
betas<-c(2.2619,2.2783,1.8414,1.5244,0.2614,-0.0836,0.1251,-0.0197)
Y1<-plnorm(tempo, meanlog = betas%*%covariaveis, sdlog = 1.24, log = FALSE)
##Tempo de interesse
tempo<-seq(0,200,1)
covariaveis1<-c(1,0,0,0,1,0,1,0)
betas<-c(2.2619,2.2783,1.8414,1.5244,0.2614,-0.0836,0.1251,-0.0197)
Y1<-plnorm(tempo, meanlog = betas%*%covariaveis, sdlog = 1.24, log = FALSE)
Y1
##Tempo de interesse
tempo<-seq(0,200,1)
##Tempo de interesse
tempo<-seq(0,200,1)
covariaveis1<-c(1,0,0,0,1,0,1,0)
betas<-c(2.2619,2.2783,1.8414,1.5244,0.2614,-0.0836,0.1251,-0.0197)
plnorm(tempo, meanlog = betas%*%covariaveis, sdlog = 1.24, log = FALSE)
##Tempo de interesse
tempo<-seq(0,200,1)
covariaveis1<-c(1,0,0,0,1,0,1,0)
betas<-c(2.2619,2.2783,1.8414,1.5244,0.2614,-0.0836,0.1251,-0.0197)
Y1<-plnorm(tempo, meanlog = betas%*%covariaveis1, sdlog = 1.24, log = FALSE)
Y1
##Tempo de interesse
tempo<-seq(0,200,1)
covariaveis1<-c(1,0,0,0,1,0,1,0)
betas<-c(2.2619,2.2783,1.8414,1.5244,0.2614,-0.0836,0.1251,-0.0197)
Y1<-plnorm(tempo, meanlog = betas%*%covariaveis1, sdlog = 1.24, log = FALSE)
summary(Y1)
##Tempo de interesse
tempo<-seq(0,200,1)
covariaveis1<-c(1,0,0,0,1,0,1,0)
betas<-c(2.2619,2.2783,1.8414,1.5244,0.2614,-0.0836,0.1251,-0.0197)
Y1<-plnorm(tempo, meanlog = betas%*%covariaveis1, sdlog = 1.24, log = FALSE)
mean(Y1)
bn_df <- data.frame(coronary)
res <- hc(bn_df)
plot(res)
bn_df <- data.frame(coronary)
res <- hc(bn_df)
plot(res)
library(bnlearn)
bn_df <- data.frame(coronary)
res <- hc(bn_df)
plot(res)
library(bnlearn)
bn_df <- data.frame(coronary)
res <- gs(bn_df)
plot(res)
library(bnlearn)
bn_df <- data.frame(coronary)
res <- mmhc(bn_df)
plot(res)
library(bnlearn)
bn_df <- data.frame(coronary)
res <- hc(bn_df)
plot(res)
library(bnlearn)
bn_df <- data.frame(coronary)
res <- hc(bn_df)
res$arcs <- res$arcs[-which((res$arcs[,'from'] == "M..Work" & res$arcs[,'to'] == "Family")
plot(res)
library(bnlearn)
bn_df <- data.frame(coronary)
res <- hc(bn_df)
res$arcs <- res$arcs[-which((res$arcs[,'from'] == "M..Work" & res$arcs[,'to'] == "Family")
plot(res)
library(bnlearn)
bn_df <- data.frame(coronary)
res <- hc(bn_df)
res$arcs <- res$arcs[-which((res$arcs[,'from'] == "M..Work" & res$arcs[,'to'] == "Family")
plot(res)
library(bnlearn)
library(bnlearn)
bn_df <- data.frame(coronary)
res <- hc(bn_df)
res$arcs <- res$arcs[-which((res$arcs[,'from'] == "M..Work" & res$arcs[,'to'] == "Family")
plot(res)
library(bnlearn)
bn_df <- data.frame(coronary)
res <- hc(bn_df)
plot(res)
res$arcs <- res$arcs[-which((res$arcs[,'from'] == "M..Work" & res$arcs[,'to'] == "Family")
library(bnlearn)
bn_df <- data.frame(coronary)
res <- hc(bn_df)
res$arcs <- res$arcs[-which((res$arcs[,'from'] == "M..Work" & res$arcs[,'to'] == "Family")
res$arcs
library(bnlearn)
bn_df <- data.frame(coronary)
res <- hc(bn_df)
res$arcs <- res$arcs[-which((res$arcs[,'from'] == "M..Work" & res$arcs[,'to'] == "Family")
res$arcs
plot(res)
library(bnlearn)
bn_df <- data.frame(coronary)
res <- hc(bn_df)
res$arcs <- res$arcs[-which((res$arcs[,'from'] == "M..Work" & res$arcs[,'to'] == "Family")
res$arcs
plot(res)
library(bnlearn)
bn_df <- data.frame(coronary)
res <- hc(bn_df)
res$arcs <- res$arcs[-which((res$arcs[,'from'] == "M..Work" & res$arcs[,'to'] == "Family")
res$arcs
library(bnlearn)
bn_df <- data.frame(coronary)
res <- hc(bn_df)
res$arcs <- res$arcs[-which((res$arcs[,'from'] == "M..Work" & res$arcs[,'to'] == "Family")
plot(res)
fittedbn <- bn.fit(res, data = bn_df)
library(bnlearn)
bn_df <- data.frame(coronary)
res <- hc(bn_df)
res$arcs <- res$arcs[-which((res$arcs[,'from'] == "M..Work" & res$arcs[,'to'] == "Family")
plot(res)
fittedbn <- bn.fit(res, data = bn_df)
cpquery(fittedbn, event = (Proteins=="<3"), evidence = ( Smoking=="no") )
library(bnlearn)
bn_df <- data.frame(coronary)
res <- hc(bn_df)
res$arcs <- res$arcs[-which((res$arcs[,'from'] == "M..Work" & res$arcs[,'to'] == "Family")
plot(res)
fittedbn <- bn.fit(res, data = bn_df)
cpquery(fittedbn, event = (Proteins=="<3"), evidence = ( Smoking=="no") )
library(bnlearn)
bn_df <- data.frame(coronary)
res <- hc(bn_df)
res$arcs <- res$arcs[-which((res$arcs[,'from'] == "M..Work" & res$arcs[,'to'] == "Family")
plot(res)
fittedbn <- bn.fit(res, data = bn_df)
cpquery(fittedbn, event = (Proteins=="<3"), evidence = ( Smoking=="no") )
library(bnlearn)
bn_df <- data.frame(coronary)
res <- hc(bn_df)
res$arcs <- res$arcs[-which((res$arcs[,'from'] == "M..Work" & res$arcs[,'to'] == "Family")
plot(res)
fittedbn <- bn.fit(res, data = bn_df)
cpquery(fittedbn, event = (Proteins=="<3"), evidence = ( Smoking=="no") )
setwd("~/Documents/projetos/data-science/inferenciaBayesiana/coronary")
setwd("~/Documents/projetos/data-science/inferenciaBayesiana/coronary")
require("bnlearn")
setwd("~/Documents/projetos/data-science/inferenciaBayesiana/coronary")
coronaryDataFrame <- data.frame(coronary)
#Aprendizagem da rede bayesiana usando algoritmo Hill-Climbing (HC)
res <- hc(coronaryDataFrame)
plot(res)
require("bnlearn")
setwd("~/Documents/projetos/data-science/inferenciaBayesiana/coronary")
#Coleta da Base de Dados Coronary
coronaryDataFrame <- data.frame(coronary)
#Aprendizagem da rede bayesiana usando algoritmo Hill-Climbing (HC)
res <- mmhc(coronaryDataFrame)
#Plot da Rede
plot(res)
require("bnlearn")
setwd("~/Documents/projetos/data-science/inferenciaBayesiana/coronary")
#Coleta da Base de Dados Coronary
coronaryDataFrame <- data.frame(coronary)
#Aprendizagem da rede bayesiana usando algoritmo Hill-Climbing (HC)
res <- mmhc(coronaryDataFrame)
#Plot da Rede
plot(res)
require("bnlearn")
setwd("~/Documents/projetos/data-science/inferenciaBayesiana/coronary")
#Coleta da Base de Dados Coronary
coronaryDataFrame <- data.frame(coronary)
#Aprendizagem da rede bayesiana usando algoritmo Hill-Climbing (HC)
res <- gs(coronaryDataFrame)
#Plot da Rede
plot(res)
require("bnlearn")
setwd("~/Documents/projetos/data-science/inferenciaBayesiana/coronary")
#Coleta da Base de Dados Coronary
coronaryDataFrame <- data.frame(coronary)
#Aprendizagem da rede bayesiana usando algoritmo Hill-Climbing (HC)
res <- hc(coronaryDataFrame)
res$arcs <- res$arcs[-which((res$arcs[,'from'] == "M..Work" & res$arcs[,'to'] == "Family"))]
#Plot da Rede
plot(res)
require("bnlearn")
setwd("~/Documents/projetos/data-science/inferenciaBayesiana/coronary")
#Coleta da Base de Dados Coronary
coronaryDataFrame <- data.frame(coronary)
#Aprendizagem da rede bayesiana usando algoritmo Hill-Climbing (HC)
res <- hc(coronaryDataFrame)
res$arcs <- res$arcs[-which((res$arcs[,'from'] == "M..Work" & res$arcs[,'to'] == "Family"))]
#Plot da Rede
plot(res)
require("bnlearn")
setwd("~/Documents/projetos/data-science/inferenciaBayesiana/coronary")
#Coleta da Base de Dados Coronary
coronaryDataFrame <- data.frame(coronary)
#Aprendizagem da rede bayesiana usando algoritmo Hill-Climbing (HC)
res <- hc(coronaryDataFrame)
res$arcs[,'from'] == "M..Work"
require("bnlearn")
setwd("~/Documents/projetos/data-science/inferenciaBayesiana/coronary")
#Coleta da Base de Dados Coronary
coronaryDataFrame <- data.frame(coronary)
#Aprendizagem da rede bayesiana usando algoritmo Hill-Climbing (HC)
res <- hc(coronaryDataFrame)
drop.arc(res, "M..Work", "Family")
#Plot da Rede
plot(res)
require("bnlearn")
setwd("~/Documents/projetos/data-science/inferenciaBayesiana/coronary")
#Coleta da Base de Dados Coronary
coronaryDataFrame <- data.frame(coronary)
#Aprendizagem da rede bayesiana usando algoritmo Hill-Climbing (HC)
res <- hc(coronaryDataFrame)
#drop.arc(res, "M..Work", "Family")
#Plot da Rede
plot(res)
require("bnlearn")
setwd("~/Documents/projetos/data-science/inferenciaBayesiana/coronary")
#Coleta da Base de Dados Coronary
coronaryDataFrame <- data.frame(coronary)
#Aprendizagem da rede bayesiana usando algoritmo Hill-Climbing (HC)
res <- hc(coronaryDataFrame)
#drop.arc(res, "M..Work", "Family")
#Plot da Rede
plot(res)
require("bnlearn")
setwd("~/Documents/projetos/data-science/inferenciaBayesiana/coronary")
#Coleta da Base de Dados Coronary
coronaryDataFrame <- data.frame(coronary)
#Aprendizagem da rede bayesiana usando algoritmo Hill-Climbing (HC)
res <- hc(coronaryDataFrame)
drop.arc(res, "M..Work", "Family")
#Plot da Rede
plot(res)
require("bnlearn")
setwd("~/Documents/projetos/data-science/inferenciaBayesiana/coronary")
#Coleta da Base de Dados Coronary
coronaryDataFrame <- data.frame(coronary)
#Aprendizagem da rede bayesiana usando algoritmo Hill-Climbing (HC)
res <- hc(coronaryDataFrame)
drop.arc(res, "Family", "M..Work")
#Plot da Rede
plot(res)
require("bnlearn")
setwd("~/Documents/projetos/data-science/inferenciaBayesiana/coronary")
#Coleta da Base de Dados Coronary
coronaryDataFrame <- data.frame(coronary)
#Aprendizagem da rede bayesiana usando algoritmo Hill-Climbing (HC)
res <- hc(coronaryDataFrame)
drop.arc(res, "Family", "M..Work")
#Plot da Rede
plot(res)
require("bnlearn")
setwd("~/Documents/projetos/data-science/inferenciaBayesiana/coronary")
#Coleta da Base de Dados Coronary
coronaryDataFrame <- data.frame(coronary)
#Aprendizagem da rede bayesiana usando algoritmo Hill-Climbing (HC)
res <- hc(coronaryDataFrame)
drop.arc(res, "Family", "M..Work")
#Plot da Rede
plot(res)
require("bnlearn")
setwd("~/Documents/projetos/data-science/inferenciaBayesiana/coronary")
#Coleta da Base de Dados Coronary
coronaryDataFrame <- data.frame(coronary)
#Aprendizagem da rede bayesiana usando algoritmo Hill-Climbing (HC)
res <- hc(coronaryDataFrame)
a = drop.arc(res, "M..Work", "Family")
a
#Plot da Rede
plot(res)
require("bnlearn")
setwd("~/Documents/projetos/data-science/inferenciaBayesiana/coronary")
#Coleta da Base de Dados Coronary
coronaryDataFrame <- data.frame(coronary)
#Aprendizagem da rede bayesiana usando algoritmo Hill-Climbing (HC)
res <- hc(coronaryDataFrame)
a = drop.arc(res, "M..Work", "Family")
a
#Plot da Rede
plot(a)
require("bnlearn")
setwd("~/Documents/projetos/data-science/inferenciaBayesiana/coronary")
#Coleta da Base de Dados Coronary
coronaryDataFrame <- data.frame(coronary)
#Aprendizagem da rede bayesiana usando algoritmo Hill-Climbing (HC)
res <- hc(coronaryDataFrame)
res <- = drop.arc(res, "M..Work", "Family")
#Plot da Rede
plot(res)
require("bnlearn")
setwd("~/Documents/projetos/data-science/inferenciaBayesiana/coronary")
#Coleta da Base de Dados Coronary
coronaryDataFrame <- data.frame(coronary)
#Aprendizagem da rede bayesiana usando algoritmo Hill-Climbing (HC)
res <- hc(coronaryDataFrame)
res <- = drop.arc(res, "M..Work", "Family")
#Plot da Rede
plot(res)
require("bnlearn")
setwd("~/Documents/projetos/data-science/inferenciaBayesiana/coronary")
#Coleta da Base de Dados Coronary
coronaryDataFrame <- data.frame(coronary)
#Aprendizagem da rede bayesiana usando algoritmo Hill-Climbing (HC)
res <- hc(coronaryDataFrame)
res <- drop.arc(res, "M..Work", "Family")
#Plot da Rede
plot(res)
require("bnlearn")
setwd("~/Documents/projetos/data-science/inferenciaBayesiana/coronary")
#Coleta da Base de Dados Coronary
coronaryDataFrame <- data.frame(coronary)
#Aprendizagem da rede bayesiana usando algoritmo Hill-Climbing (HC)
res <- hc(coronaryDataFrame)
res <- drop.arc(res, "M..Work", "Family")
#Plot da Rede
plot(res)
fittedbn <- bn.fit(res, data = coronaryDataFrame)
require("bnlearn")
setwd("~/Documents/projetos/data-science/inferenciaBayesiana/coronary")
#Coleta da Base de Dados Coronary
coronaryDataFrame <- data.frame(coronary)
#Aprendizagem da rede bayesiana usando algoritmo Hill-Climbing (HC)
res <- hc(coronaryDataFrame)
res <- drop.arc(res, "M..Work", "Family")
#Plot da Rede
plot(res)
#Rede Bayesiana Ajustada
bnAjustado <- bn.fit(res, data = coronaryDataFrame)
print(bnAjustado$Proteins)
require("bnlearn")
setwd("~/Documents/projetos/data-science/inferenciaBayesiana/coronary")
#Coleta da Base de Dados Coronary
coronaryDataFrame <- data.frame(coronary)
#Aprendizagem da rede bayesiana usando algoritmo Hill-Climbing (HC)
res <- hc(coronaryDataFrame)
res <- drop.arc(res, "M..Work", "Family")
style <- list(node=list(fillcolor="#70B2E1",
textCol="white",
color="gray",
fontsize=11,
fontcolor="white",
height=5,
lwd=2
),
edge=list(color="#70B2E1",arrowsize=".3")
)
#Plot da Rede
plot(res, attrs=style)
#Rede Bayesiana Ajustada
bnAjustado <- bn.fit(res, data = coronaryDataFrame)
print(bnAjustado$Proteins)
require("bnlearn")
setwd("~/Documents/projetos/data-science/inferenciaBayesiana/coronary")
#Coleta da Base de Dados Coronary
coronaryDataFrame <- data.frame(coronary)
#Aprendizagem da rede bayesiana usando algoritmo Hill-Climbing (HC)
res <- hc(coronaryDataFrame)
res <- drop.arc(res, "M..Work", "Family")
style <- list(node=list(fillcolor="#70B2E1",
textCol="white",
color="gray",
fontsize=11,
fontcolor="white",
height=5,
lwd=2
),
edge=list(color="#70B2E1",arrowsize=".3")
)
#Plot da Rede
plot(res, attrs=style)
#Rede Bayesiana Ajustada
bnAjustado <- bn.fit(res, data = coronaryDataFrame)
print(bnAjustado$Proteins)
require("bnlearn")
setwd("~/Documents/projetos/data-science/inferenciaBayesiana/coronary")
#Coleta da Base de Dados Coronary
coronaryDataFrame <- data.frame(coronary)
#Aprendizagem da rede bayesiana usando algoritmo Hill-Climbing (HC)
res <- hc(coronaryDataFrame)
res <- drop.arc(res, "M..Work", "Family")
style <- list(node=list(fillcolor="#70B2E1",
textCol="white",
color="gray",
fontsize=11,
fontcolor="white",
height=5,
lwd=2
),
edge=list(color="#70B2E1",arrowsize=".3")
)
g <- graphviz.plot(res)
#Plot da Rede
plot(g, attrs=style)
#Rede Bayesiana Ajustada
bnAjustado <- bn.fit(res, data = coronaryDataFrame)
print(bnAjustado$Proteins)
require("bnlearn")
library(Rgraphviz)
setwd("~/Documents/projetos/data-science/inferenciaBayesiana/coronary")
#Coleta da Base de Dados Coronary
coronaryDataFrame <- data.frame(coronary)
#Aprendizagem da rede bayesiana usando algoritmo Hill-Climbing (HC)
res <- hc(coronaryDataFrame)
res <- drop.arc(res, "M..Work", "Family")
style <- list(node=list(fillcolor="#70B2E1",
textCol="white",
color="gray",
fontsize=11,
fontcolor="white",
height=5,
lwd=2
),
edge=list(color="#70B2E1",arrowsize=".3")
)
g <- graphviz.plot(res)
#Plot da Rede
plot(g, attrs=style)
#Rede Bayesiana Ajustada
bnAjustado <- bn.fit(res, data = coronaryDataFrame)
print(bnAjustado$Proteins)
require("bnlearn")
setwd("~/Documents/projetos/data-science/inferenciaBayesiana/coronary")
#Coleta da Base de Dados Coronary
coronaryDataFrame <- data.frame(coronary)
#Aprendizagem da rede bayesiana usando algoritmo Hill-Climbing (HC)
res <- hc(coronaryDataFrame)
res <- drop.arc(res, "M..Work", "Family")
#Plot da Rede
plot(res)
#Rede Bayesiana Ajustada
bnAjustado <- bn.fit(res, data = coronaryDataFrame)
print(bnAjustado$Proteins)
require("bnlearn")
setwd("~/Documents/projetos/data-science/inferenciaBayesiana/coronary")
#Coleta da Base de Dados Coronary
coronaryDataFrame <- data.frame(coronary)
#Aprendizagem da rede bayesiana usando algoritmo Hill-Climbing (HC)
res <- hc(coronaryDataFrame)
res <- drop.arc(res, "M..Work", "Family")
#Plot da Rede
plot(res)
#Rede Bayesiana Ajustada
bnAjustado <- bn.fit(res, data = coronaryDataFrame)
print(bnAjustado$Proteins)
require("bnlearn")
setwd("~/Documents/projetos/data-science/inferenciaBayesiana/coronary")
#Coleta da Base de Dados Coronary
coronaryDataFrame <- data.frame(coronary)
#Aprendizagem da rede bayesiana usando algoritmo Hill-Climbing (HC)
res <- hc(coronaryDataFrame)
res <- drop.arc(res, "M..Work", "Family")
#Plot da Rede
plot(res)
#Rede Bayesiana Ajustada
bnAjustado <- bn.fit(res, data = coronaryDataFrame)
print(bnAjustado$Proteins)
require("bnlearn")
setwd("~/Documents/projetos/data-science/inferenciaBayesiana/coronary")
#Coleta da Base de Dados Coronary
coronaryDataFrame <- data.frame(coronary)
#Aprendizagem da rede bayesiana usando algoritmo Hill-Climbing (HC)
res <- hc(coronaryDataFrame)
res <- drop.arc(res, "M..Work", "Family")
#Plot da Rede
plot(res)
#Rede Bayesiana Ajustada
bnAjustado <- bn.fit(res, data = coronaryDataFrame)
print(bnAjustado$Proteins)
require("bnlearn")
setwd("~/Documents/projetos/data-science/inferenciaBayesiana/coronary")
#Coleta da Base de Dados Coronary
coronaryDataFrame <- data.frame(coronary)
#Aprendizagem da rede bayesiana usando algoritmo Hill-Climbing (HC)
res <- hc(coronaryDataFrame)
res <- drop.arc(res, "M..Work", "Family")
#Plot da Rede
plot(res)
#Rede Bayesiana Ajustada
bnAjustado <- bn.fit(res, data = coronaryDataFrame)
print(bnAjustado$Proteins)
